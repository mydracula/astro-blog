---
import { getCollection } from 'astro:content'
import { nanoid } from 'nanoid'

import Classification from '@components/Classification/index.astro'
import BaseLayout from '@layouts/BaseLayout.astro'
import { allPostList, categorieProp, categories, postProp, metaProp } from '@stores/posts'

export async function getStaticPaths() {
  const allPosts = (await getCollection('posts')).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
  allPostList.set(allPosts)
  const flatArr = allPosts.map((i) => i.data.category)
  const transformArray = (data) => {
    const result = []

    data.forEach((item) => {
      let parent = null
      item.forEach((name) => {
        const path = parent ? `${parent.path}/${name}` : `${name}`
        const node = { name, path, id: nanoid() } as any
        if (parent) {
          node.parent = parent.id
        }
        result.push(node)
        parent = node
      })
    })
    return result
  }
  const categorys = transformArray(flatArr)
  categories.set(categorys)

  return categorys.map((category) => {
    return [
      { params: { category: undefined } },
      {
        params: {
          category: category.path
        },
        props: {
          category: category.path,
          name: category.name
        }
      }
    ]
  })
}

const { category, name } = Astro.props

categorieProp.set(category)
postProp.set()
metaProp.set({
  name: category ? `分类于"${name}"的文章` : '全部分类'
})
---

<BaseLayout>
  <Classification />
</BaseLayout>
